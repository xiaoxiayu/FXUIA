# Generated by the protocol buffer compiler.  DO NOT EDIT!
# source: imageprocess.proto

import sys
_b=sys.version_info[0]<3 and (lambda x:x) or (lambda x:x.encode('latin1'))
from google.protobuf import descriptor as _descriptor
from google.protobuf import message as _message
from google.protobuf import reflection as _reflection
from google.protobuf import symbol_database as _symbol_database
from google.protobuf import descriptor_pb2
# @@protoc_insertion_point(imports)

_sym_db = _symbol_database.Default()




DESCRIPTOR = _descriptor.FileDescriptor(
  name='imageprocess.proto',
  package='imageprocess',
  syntax='proto3',
  serialized_pb=_b('\n\x12imageprocess.proto\x12\x0cimageprocess\"\x17\n\nIntRequest\x12\t\n\x01i\x18\x01 \x01(\x05\"\x16\n\tBoolReply\x12\t\n\x01\x62\x18\x01 \x01(\x08\"\x1f\n\x0bStringReply\x12\x10\n\x08replystr\x18\x01 \x01(\x0c\"\x1a\n\nFloatReply\x12\x0c\n\x04\x64\x61ta\x18\x01 \x01(\x02\"\x1b\n\tStringReq\x12\x0e\n\x06reqstr\x18\x01 \x01(\x0c\"\x1c\n\nImgRequest\x12\x0e\n\x06imgobj\x18\x01 \x01(\x0c\"/\n\rFilterRequest\x12\x0e\n\x06imgobj\x18\x01 \x01(\x0c\x12\x0e\n\x06matrix\x18\x02 \x01(\x0c\"\x1c\n\x04\x42lur\x12\t\n\x01x\x18\x01 \x01(\x05\x12\t\n\x01y\x18\x02 \x01(\x05\"5\n\x07\x46ilterP\x12\x0e\n\x06\x65nable\x18\x01 \x01(\x08\x12\x0c\n\x04zoom\x18\x02 \x01(\x02\x12\x0c\n\x04\x63ore\x18\x03 \x01(\x05\"t\n\tDetectImg\x12\x0e\n\x06imgobj\x18\x01 \x01(\x0c\x12\x0e\n\x06thresh\x18\x02 \x01(\x05\x12 \n\x04\x62lur\x18\x03 \x01(\x0b\x32\x12.imageprocess.Blur\x12%\n\x06\x66ilter\x18\x04 \x01(\x0b\x32\x15.imageprocess.FilterP\"\x1a\n\x08ImgReply\x12\x0e\n\x06imgobj\x18\x01 \x01(\x0c\",\n\nOcrRequest\x12\x0e\n\x06imgobj\x18\x01 \x01(\x0c\x12\x0e\n\x06thresh\x18\x02 \x01(\x05\"I\n\x0e\x46indImgRequest\x12\x0e\n\x06imgobj\x18\x01 \x01(\x0c\x12\x13\n\x0btemplateobj\x18\x02 \x01(\x0c\x12\x12\n\nmatchvalue\x18\x03 \x01(\x05\"\xa4\x01\n\rCmpImgRequest\x12\x11\n\torgimgobj\x18\x01 \x01(\x0c\x12\x11\n\tcmpimgobj\x18\x02 \x01(\x0c\x12 \n\x04\x62lur\x18\x03 \x01(\x0b\x32\x12.imageprocess.Blur\x12\x13\n\x0b\x66ilter_core\x18\x04 \x01(\x05\x12!\n\x19\x66\x65\x61ture_matching_distance\x18\x05 \x01(\x02\x12\x13\n\x0b\x64isparities\x18\x06 \x01(\x05\")\n\x0b\x43mpImgReply\x12\n\n\x02\x64p\x18\x01 \x01(\x05\x12\x0e\n\x06imgobj\x18\x02 \x01(\x0c\"\x17\n\x08TxtReply\x12\x0b\n\x03txt\x18\x01 \x01(\t\"9\n\x0b\x45lementRect\x12\t\n\x01x\x18\x01 \x01(\x05\x12\t\n\x01y\x18\x02 \x01(\x05\x12\t\n\x01w\x18\x03 \x01(\x05\x12\t\n\x01h\x18\x04 \x01(\x05\"<\n\nElementPos\x12\n\n\x02x0\x18\x01 \x01(\x05\x12\n\n\x02y0\x18\x02 \x01(\x05\x12\n\n\x02x1\x18\x03 \x01(\x05\x12\n\n\x02y1\x18\x04 \x01(\x05\"#\n\x0bHistBarData\x12\t\n\x01x\x18\x01 \x01(\x05\x12\t\n\x01y\x18\x02 \x01(\x05\"N\n\x06\x44Match\x12\x10\n\x08\x64istance\x18\x01 \x01(\x02\x12\x10\n\x08trainIdx\x18\x02 \x01(\x05\x12\x10\n\x08queryIdx\x18\x03 \x01(\x05\x12\x0e\n\x06imgIdx\x18\x04 \x01(\x05\";\n\tDMatchPos\x12\n\n\x02x0\x18\x01 \x01(\x02\x12\n\n\x02y0\x18\x02 \x01(\x02\x12\n\n\x02x1\x18\x03 \x01(\x02\x12\n\n\x02y1\x18\x04 \x01(\x02\x32\x93\x06\n\x05Image\x12<\n\x04Info\x12\x17.imageprocess.StringReq\x1a\x19.imageprocess.StringReply\"\x00\x12:\n\x04\x44raw\x12\x18.imageprocess.ImgRequest\x1a\x16.imageprocess.ImgReply\"\x00\x12H\n\x0e\x44\x65tectElements\x12\x17.imageprocess.DetectImg\x1a\x19.imageprocess.ElementRect\"\x00\x30\x01\x12L\n\x10\x44\x65tectSimilarity\x12\x1b.imageprocess.CmpImgRequest\x1a\x17.imageprocess.DMatchPos\"\x00\x30\x01\x12J\n\x0e\x44rawSimilarity\x12\x1b.imageprocess.CmpImgRequest\x1a\x19.imageprocess.CmpImgReply\"\x00\x12\x39\n\x03OCR\x12\x18.imageprocess.ImgRequest\x1a\x16.imageprocess.TxtReply\"\x00\x12\x45\n\tFindImage\x12\x1c.imageprocess.FindImgRequest\x1a\x18.imageprocess.ElementPos\"\x00\x12Q\n\x16GetBrightnessHistArray\x12\x18.imageprocess.ImgRequest\x1a\x19.imageprocess.HistBarData\"\x00\x30\x01\x12G\n\x0bGetDiffRect\x12\x1b.imageprocess.CmpImgRequest\x1a\x19.imageprocess.ElementRect\"\x00\x12K\n\x10\x43ompareColorHist\x12\x1b.imageprocess.CmpImgRequest\x1a\x18.imageprocess.FloatReply\"\x00\x12\x41\n\x08\x46ilter2D\x12\x1b.imageprocess.FilterRequest\x1a\x16.imageprocess.ImgReply\"\x00\x42\x36\n\x1bio.grpc.examples.helloworldB\x0fHelloWorldProtoP\x01\xa2\x02\x03HLWb\x06proto3')
)
_sym_db.RegisterFileDescriptor(DESCRIPTOR)




_INTREQUEST = _descriptor.Descriptor(
  name='IntRequest',
  full_name='imageprocess.IntRequest',
  filename=None,
  file=DESCRIPTOR,
  containing_type=None,
  fields=[
    _descriptor.FieldDescriptor(
      name='i', full_name='imageprocess.IntRequest.i', index=0,
      number=1, type=5, cpp_type=1, label=1,
      has_default_value=False, default_value=0,
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None),
  ],
  extensions=[
  ],
  nested_types=[],
  enum_types=[
  ],
  options=None,
  is_extendable=False,
  syntax='proto3',
  extension_ranges=[],
  oneofs=[
  ],
  serialized_start=36,
  serialized_end=59,
)


_BOOLREPLY = _descriptor.Descriptor(
  name='BoolReply',
  full_name='imageprocess.BoolReply',
  filename=None,
  file=DESCRIPTOR,
  containing_type=None,
  fields=[
    _descriptor.FieldDescriptor(
      name='b', full_name='imageprocess.BoolReply.b', index=0,
      number=1, type=8, cpp_type=7, label=1,
      has_default_value=False, default_value=False,
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None),
  ],
  extensions=[
  ],
  nested_types=[],
  enum_types=[
  ],
  options=None,
  is_extendable=False,
  syntax='proto3',
  extension_ranges=[],
  oneofs=[
  ],
  serialized_start=61,
  serialized_end=83,
)


_STRINGREPLY = _descriptor.Descriptor(
  name='StringReply',
  full_name='imageprocess.StringReply',
  filename=None,
  file=DESCRIPTOR,
  containing_type=None,
  fields=[
    _descriptor.FieldDescriptor(
      name='replystr', full_name='imageprocess.StringReply.replystr', index=0,
      number=1, type=12, cpp_type=9, label=1,
      has_default_value=False, default_value=_b(""),
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None),
  ],
  extensions=[
  ],
  nested_types=[],
  enum_types=[
  ],
  options=None,
  is_extendable=False,
  syntax='proto3',
  extension_ranges=[],
  oneofs=[
  ],
  serialized_start=85,
  serialized_end=116,
)


_FLOATREPLY = _descriptor.Descriptor(
  name='FloatReply',
  full_name='imageprocess.FloatReply',
  filename=None,
  file=DESCRIPTOR,
  containing_type=None,
  fields=[
    _descriptor.FieldDescriptor(
      name='data', full_name='imageprocess.FloatReply.data', index=0,
      number=1, type=2, cpp_type=6, label=1,
      has_default_value=False, default_value=float(0),
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None),
  ],
  extensions=[
  ],
  nested_types=[],
  enum_types=[
  ],
  options=None,
  is_extendable=False,
  syntax='proto3',
  extension_ranges=[],
  oneofs=[
  ],
  serialized_start=118,
  serialized_end=144,
)


_STRINGREQ = _descriptor.Descriptor(
  name='StringReq',
  full_name='imageprocess.StringReq',
  filename=None,
  file=DESCRIPTOR,
  containing_type=None,
  fields=[
    _descriptor.FieldDescriptor(
      name='reqstr', full_name='imageprocess.StringReq.reqstr', index=0,
      number=1, type=12, cpp_type=9, label=1,
      has_default_value=False, default_value=_b(""),
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None),
  ],
  extensions=[
  ],
  nested_types=[],
  enum_types=[
  ],
  options=None,
  is_extendable=False,
  syntax='proto3',
  extension_ranges=[],
  oneofs=[
  ],
  serialized_start=146,
  serialized_end=173,
)


_IMGREQUEST = _descriptor.Descriptor(
  name='ImgRequest',
  full_name='imageprocess.ImgRequest',
  filename=None,
  file=DESCRIPTOR,
  containing_type=None,
  fields=[
    _descriptor.FieldDescriptor(
      name='imgobj', full_name='imageprocess.ImgRequest.imgobj', index=0,
      number=1, type=12, cpp_type=9, label=1,
      has_default_value=False, default_value=_b(""),
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None),
  ],
  extensions=[
  ],
  nested_types=[],
  enum_types=[
  ],
  options=None,
  is_extendable=False,
  syntax='proto3',
  extension_ranges=[],
  oneofs=[
  ],
  serialized_start=175,
  serialized_end=203,
)


_FILTERREQUEST = _descriptor.Descriptor(
  name='FilterRequest',
  full_name='imageprocess.FilterRequest',
  filename=None,
  file=DESCRIPTOR,
  containing_type=None,
  fields=[
    _descriptor.FieldDescriptor(
      name='imgobj', full_name='imageprocess.FilterRequest.imgobj', index=0,
      number=1, type=12, cpp_type=9, label=1,
      has_default_value=False, default_value=_b(""),
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None),
    _descriptor.FieldDescriptor(
      name='matrix', full_name='imageprocess.FilterRequest.matrix', index=1,
      number=2, type=12, cpp_type=9, label=1,
      has_default_value=False, default_value=_b(""),
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None),
  ],
  extensions=[
  ],
  nested_types=[],
  enum_types=[
  ],
  options=None,
  is_extendable=False,
  syntax='proto3',
  extension_ranges=[],
  oneofs=[
  ],
  serialized_start=205,
  serialized_end=252,
)


_BLUR = _descriptor.Descriptor(
  name='Blur',
  full_name='imageprocess.Blur',
  filename=None,
  file=DESCRIPTOR,
  containing_type=None,
  fields=[
    _descriptor.FieldDescriptor(
      name='x', full_name='imageprocess.Blur.x', index=0,
      number=1, type=5, cpp_type=1, label=1,
      has_default_value=False, default_value=0,
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None),
    _descriptor.FieldDescriptor(
      name='y', full_name='imageprocess.Blur.y', index=1,
      number=2, type=5, cpp_type=1, label=1,
      has_default_value=False, default_value=0,
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None),
  ],
  extensions=[
  ],
  nested_types=[],
  enum_types=[
  ],
  options=None,
  is_extendable=False,
  syntax='proto3',
  extension_ranges=[],
  oneofs=[
  ],
  serialized_start=254,
  serialized_end=282,
)


_FILTERP = _descriptor.Descriptor(
  name='FilterP',
  full_name='imageprocess.FilterP',
  filename=None,
  file=DESCRIPTOR,
  containing_type=None,
  fields=[
    _descriptor.FieldDescriptor(
      name='enable', full_name='imageprocess.FilterP.enable', index=0,
      number=1, type=8, cpp_type=7, label=1,
      has_default_value=False, default_value=False,
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None),
    _descriptor.FieldDescriptor(
      name='zoom', full_name='imageprocess.FilterP.zoom', index=1,
      number=2, type=2, cpp_type=6, label=1,
      has_default_value=False, default_value=float(0),
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None),
    _descriptor.FieldDescriptor(
      name='core', full_name='imageprocess.FilterP.core', index=2,
      number=3, type=5, cpp_type=1, label=1,
      has_default_value=False, default_value=0,
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None),
  ],
  extensions=[
  ],
  nested_types=[],
  enum_types=[
  ],
  options=None,
  is_extendable=False,
  syntax='proto3',
  extension_ranges=[],
  oneofs=[
  ],
  serialized_start=284,
  serialized_end=337,
)


_DETECTIMG = _descriptor.Descriptor(
  name='DetectImg',
  full_name='imageprocess.DetectImg',
  filename=None,
  file=DESCRIPTOR,
  containing_type=None,
  fields=[
    _descriptor.FieldDescriptor(
      name='imgobj', full_name='imageprocess.DetectImg.imgobj', index=0,
      number=1, type=12, cpp_type=9, label=1,
      has_default_value=False, default_value=_b(""),
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None),
    _descriptor.FieldDescriptor(
      name='thresh', full_name='imageprocess.DetectImg.thresh', index=1,
      number=2, type=5, cpp_type=1, label=1,
      has_default_value=False, default_value=0,
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None),
    _descriptor.FieldDescriptor(
      name='blur', full_name='imageprocess.DetectImg.blur', index=2,
      number=3, type=11, cpp_type=10, label=1,
      has_default_value=False, default_value=None,
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None),
    _descriptor.FieldDescriptor(
      name='filter', full_name='imageprocess.DetectImg.filter', index=3,
      number=4, type=11, cpp_type=10, label=1,
      has_default_value=False, default_value=None,
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None),
  ],
  extensions=[
  ],
  nested_types=[],
  enum_types=[
  ],
  options=None,
  is_extendable=False,
  syntax='proto3',
  extension_ranges=[],
  oneofs=[
  ],
  serialized_start=339,
  serialized_end=455,
)


_IMGREPLY = _descriptor.Descriptor(
  name='ImgReply',
  full_name='imageprocess.ImgReply',
  filename=None,
  file=DESCRIPTOR,
  containing_type=None,
  fields=[
    _descriptor.FieldDescriptor(
      name='imgobj', full_name='imageprocess.ImgReply.imgobj', index=0,
      number=1, type=12, cpp_type=9, label=1,
      has_default_value=False, default_value=_b(""),
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None),
  ],
  extensions=[
  ],
  nested_types=[],
  enum_types=[
  ],
  options=None,
  is_extendable=False,
  syntax='proto3',
  extension_ranges=[],
  oneofs=[
  ],
  serialized_start=457,
  serialized_end=483,
)


_OCRREQUEST = _descriptor.Descriptor(
  name='OcrRequest',
  full_name='imageprocess.OcrRequest',
  filename=None,
  file=DESCRIPTOR,
  containing_type=None,
  fields=[
    _descriptor.FieldDescriptor(
      name='imgobj', full_name='imageprocess.OcrRequest.imgobj', index=0,
      number=1, type=12, cpp_type=9, label=1,
      has_default_value=False, default_value=_b(""),
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None),
    _descriptor.FieldDescriptor(
      name='thresh', full_name='imageprocess.OcrRequest.thresh', index=1,
      number=2, type=5, cpp_type=1, label=1,
      has_default_value=False, default_value=0,
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None),
  ],
  extensions=[
  ],
  nested_types=[],
  enum_types=[
  ],
  options=None,
  is_extendable=False,
  syntax='proto3',
  extension_ranges=[],
  oneofs=[
  ],
  serialized_start=485,
  serialized_end=529,
)


_FINDIMGREQUEST = _descriptor.Descriptor(
  name='FindImgRequest',
  full_name='imageprocess.FindImgRequest',
  filename=None,
  file=DESCRIPTOR,
  containing_type=None,
  fields=[
    _descriptor.FieldDescriptor(
      name='imgobj', full_name='imageprocess.FindImgRequest.imgobj', index=0,
      number=1, type=12, cpp_type=9, label=1,
      has_default_value=False, default_value=_b(""),
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None),
    _descriptor.FieldDescriptor(
      name='templateobj', full_name='imageprocess.FindImgRequest.templateobj', index=1,
      number=2, type=12, cpp_type=9, label=1,
      has_default_value=False, default_value=_b(""),
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None),
    _descriptor.FieldDescriptor(
      name='matchvalue', full_name='imageprocess.FindImgRequest.matchvalue', index=2,
      number=3, type=5, cpp_type=1, label=1,
      has_default_value=False, default_value=0,
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None),
  ],
  extensions=[
  ],
  nested_types=[],
  enum_types=[
  ],
  options=None,
  is_extendable=False,
  syntax='proto3',
  extension_ranges=[],
  oneofs=[
  ],
  serialized_start=531,
  serialized_end=604,
)


_CMPIMGREQUEST = _descriptor.Descriptor(
  name='CmpImgRequest',
  full_name='imageprocess.CmpImgRequest',
  filename=None,
  file=DESCRIPTOR,
  containing_type=None,
  fields=[
    _descriptor.FieldDescriptor(
      name='orgimgobj', full_name='imageprocess.CmpImgRequest.orgimgobj', index=0,
      number=1, type=12, cpp_type=9, label=1,
      has_default_value=False, default_value=_b(""),
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None),
    _descriptor.FieldDescriptor(
      name='cmpimgobj', full_name='imageprocess.CmpImgRequest.cmpimgobj', index=1,
      number=2, type=12, cpp_type=9, label=1,
      has_default_value=False, default_value=_b(""),
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None),
    _descriptor.FieldDescriptor(
      name='blur', full_name='imageprocess.CmpImgRequest.blur', index=2,
      number=3, type=11, cpp_type=10, label=1,
      has_default_value=False, default_value=None,
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None),
    _descriptor.FieldDescriptor(
      name='filter_core', full_name='imageprocess.CmpImgRequest.filter_core', index=3,
      number=4, type=5, cpp_type=1, label=1,
      has_default_value=False, default_value=0,
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None),
    _descriptor.FieldDescriptor(
      name='feature_matching_distance', full_name='imageprocess.CmpImgRequest.feature_matching_distance', index=4,
      number=5, type=2, cpp_type=6, label=1,
      has_default_value=False, default_value=float(0),
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None),
    _descriptor.FieldDescriptor(
      name='disparities', full_name='imageprocess.CmpImgRequest.disparities', index=5,
      number=6, type=5, cpp_type=1, label=1,
      has_default_value=False, default_value=0,
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None),
  ],
  extensions=[
  ],
  nested_types=[],
  enum_types=[
  ],
  options=None,
  is_extendable=False,
  syntax='proto3',
  extension_ranges=[],
  oneofs=[
  ],
  serialized_start=607,
  serialized_end=771,
)


_CMPIMGREPLY = _descriptor.Descriptor(
  name='CmpImgReply',
  full_name='imageprocess.CmpImgReply',
  filename=None,
  file=DESCRIPTOR,
  containing_type=None,
  fields=[
    _descriptor.FieldDescriptor(
      name='dp', full_name='imageprocess.CmpImgReply.dp', index=0,
      number=1, type=5, cpp_type=1, label=1,
      has_default_value=False, default_value=0,
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None),
    _descriptor.FieldDescriptor(
      name='imgobj', full_name='imageprocess.CmpImgReply.imgobj', index=1,
      number=2, type=12, cpp_type=9, label=1,
      has_default_value=False, default_value=_b(""),
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None),
  ],
  extensions=[
  ],
  nested_types=[],
  enum_types=[
  ],
  options=None,
  is_extendable=False,
  syntax='proto3',
  extension_ranges=[],
  oneofs=[
  ],
  serialized_start=773,
  serialized_end=814,
)


_TXTREPLY = _descriptor.Descriptor(
  name='TxtReply',
  full_name='imageprocess.TxtReply',
  filename=None,
  file=DESCRIPTOR,
  containing_type=None,
  fields=[
    _descriptor.FieldDescriptor(
      name='txt', full_name='imageprocess.TxtReply.txt', index=0,
      number=1, type=9, cpp_type=9, label=1,
      has_default_value=False, default_value=_b("").decode('utf-8'),
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None),
  ],
  extensions=[
  ],
  nested_types=[],
  enum_types=[
  ],
  options=None,
  is_extendable=False,
  syntax='proto3',
  extension_ranges=[],
  oneofs=[
  ],
  serialized_start=816,
  serialized_end=839,
)


_ELEMENTRECT = _descriptor.Descriptor(
  name='ElementRect',
  full_name='imageprocess.ElementRect',
  filename=None,
  file=DESCRIPTOR,
  containing_type=None,
  fields=[
    _descriptor.FieldDescriptor(
      name='x', full_name='imageprocess.ElementRect.x', index=0,
      number=1, type=5, cpp_type=1, label=1,
      has_default_value=False, default_value=0,
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None),
    _descriptor.FieldDescriptor(
      name='y', full_name='imageprocess.ElementRect.y', index=1,
      number=2, type=5, cpp_type=1, label=1,
      has_default_value=False, default_value=0,
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None),
    _descriptor.FieldDescriptor(
      name='w', full_name='imageprocess.ElementRect.w', index=2,
      number=3, type=5, cpp_type=1, label=1,
      has_default_value=False, default_value=0,
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None),
    _descriptor.FieldDescriptor(
      name='h', full_name='imageprocess.ElementRect.h', index=3,
      number=4, type=5, cpp_type=1, label=1,
      has_default_value=False, default_value=0,
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None),
  ],
  extensions=[
  ],
  nested_types=[],
  enum_types=[
  ],
  options=None,
  is_extendable=False,
  syntax='proto3',
  extension_ranges=[],
  oneofs=[
  ],
  serialized_start=841,
  serialized_end=898,
)


_ELEMENTPOS = _descriptor.Descriptor(
  name='ElementPos',
  full_name='imageprocess.ElementPos',
  filename=None,
  file=DESCRIPTOR,
  containing_type=None,
  fields=[
    _descriptor.FieldDescriptor(
      name='x0', full_name='imageprocess.ElementPos.x0', index=0,
      number=1, type=5, cpp_type=1, label=1,
      has_default_value=False, default_value=0,
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None),
    _descriptor.FieldDescriptor(
      name='y0', full_name='imageprocess.ElementPos.y0', index=1,
      number=2, type=5, cpp_type=1, label=1,
      has_default_value=False, default_value=0,
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None),
    _descriptor.FieldDescriptor(
      name='x1', full_name='imageprocess.ElementPos.x1', index=2,
      number=3, type=5, cpp_type=1, label=1,
      has_default_value=False, default_value=0,
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None),
    _descriptor.FieldDescriptor(
      name='y1', full_name='imageprocess.ElementPos.y1', index=3,
      number=4, type=5, cpp_type=1, label=1,
      has_default_value=False, default_value=0,
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None),
  ],
  extensions=[
  ],
  nested_types=[],
  enum_types=[
  ],
  options=None,
  is_extendable=False,
  syntax='proto3',
  extension_ranges=[],
  oneofs=[
  ],
  serialized_start=900,
  serialized_end=960,
)


_HISTBARDATA = _descriptor.Descriptor(
  name='HistBarData',
  full_name='imageprocess.HistBarData',
  filename=None,
  file=DESCRIPTOR,
  containing_type=None,
  fields=[
    _descriptor.FieldDescriptor(
      name='x', full_name='imageprocess.HistBarData.x', index=0,
      number=1, type=5, cpp_type=1, label=1,
      has_default_value=False, default_value=0,
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None),
    _descriptor.FieldDescriptor(
      name='y', full_name='imageprocess.HistBarData.y', index=1,
      number=2, type=5, cpp_type=1, label=1,
      has_default_value=False, default_value=0,
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None),
  ],
  extensions=[
  ],
  nested_types=[],
  enum_types=[
  ],
  options=None,
  is_extendable=False,
  syntax='proto3',
  extension_ranges=[],
  oneofs=[
  ],
  serialized_start=962,
  serialized_end=997,
)


_DMATCH = _descriptor.Descriptor(
  name='DMatch',
  full_name='imageprocess.DMatch',
  filename=None,
  file=DESCRIPTOR,
  containing_type=None,
  fields=[
    _descriptor.FieldDescriptor(
      name='distance', full_name='imageprocess.DMatch.distance', index=0,
      number=1, type=2, cpp_type=6, label=1,
      has_default_value=False, default_value=float(0),
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None),
    _descriptor.FieldDescriptor(
      name='trainIdx', full_name='imageprocess.DMatch.trainIdx', index=1,
      number=2, type=5, cpp_type=1, label=1,
      has_default_value=False, default_value=0,
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None),
    _descriptor.FieldDescriptor(
      name='queryIdx', full_name='imageprocess.DMatch.queryIdx', index=2,
      number=3, type=5, cpp_type=1, label=1,
      has_default_value=False, default_value=0,
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None),
    _descriptor.FieldDescriptor(
      name='imgIdx', full_name='imageprocess.DMatch.imgIdx', index=3,
      number=4, type=5, cpp_type=1, label=1,
      has_default_value=False, default_value=0,
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None),
  ],
  extensions=[
  ],
  nested_types=[],
  enum_types=[
  ],
  options=None,
  is_extendable=False,
  syntax='proto3',
  extension_ranges=[],
  oneofs=[
  ],
  serialized_start=999,
  serialized_end=1077,
)


_DMATCHPOS = _descriptor.Descriptor(
  name='DMatchPos',
  full_name='imageprocess.DMatchPos',
  filename=None,
  file=DESCRIPTOR,
  containing_type=None,
  fields=[
    _descriptor.FieldDescriptor(
      name='x0', full_name='imageprocess.DMatchPos.x0', index=0,
      number=1, type=2, cpp_type=6, label=1,
      has_default_value=False, default_value=float(0),
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None),
    _descriptor.FieldDescriptor(
      name='y0', full_name='imageprocess.DMatchPos.y0', index=1,
      number=2, type=2, cpp_type=6, label=1,
      has_default_value=False, default_value=float(0),
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None),
    _descriptor.FieldDescriptor(
      name='x1', full_name='imageprocess.DMatchPos.x1', index=2,
      number=3, type=2, cpp_type=6, label=1,
      has_default_value=False, default_value=float(0),
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None),
    _descriptor.FieldDescriptor(
      name='y1', full_name='imageprocess.DMatchPos.y1', index=3,
      number=4, type=2, cpp_type=6, label=1,
      has_default_value=False, default_value=float(0),
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None),
  ],
  extensions=[
  ],
  nested_types=[],
  enum_types=[
  ],
  options=None,
  is_extendable=False,
  syntax='proto3',
  extension_ranges=[],
  oneofs=[
  ],
  serialized_start=1079,
  serialized_end=1138,
)

_DETECTIMG.fields_by_name['blur'].message_type = _BLUR
_DETECTIMG.fields_by_name['filter'].message_type = _FILTERP
_CMPIMGREQUEST.fields_by_name['blur'].message_type = _BLUR
DESCRIPTOR.message_types_by_name['IntRequest'] = _INTREQUEST
DESCRIPTOR.message_types_by_name['BoolReply'] = _BOOLREPLY
DESCRIPTOR.message_types_by_name['StringReply'] = _STRINGREPLY
DESCRIPTOR.message_types_by_name['FloatReply'] = _FLOATREPLY
DESCRIPTOR.message_types_by_name['StringReq'] = _STRINGREQ
DESCRIPTOR.message_types_by_name['ImgRequest'] = _IMGREQUEST
DESCRIPTOR.message_types_by_name['FilterRequest'] = _FILTERREQUEST
DESCRIPTOR.message_types_by_name['Blur'] = _BLUR
DESCRIPTOR.message_types_by_name['FilterP'] = _FILTERP
DESCRIPTOR.message_types_by_name['DetectImg'] = _DETECTIMG
DESCRIPTOR.message_types_by_name['ImgReply'] = _IMGREPLY
DESCRIPTOR.message_types_by_name['OcrRequest'] = _OCRREQUEST
DESCRIPTOR.message_types_by_name['FindImgRequest'] = _FINDIMGREQUEST
DESCRIPTOR.message_types_by_name['CmpImgRequest'] = _CMPIMGREQUEST
DESCRIPTOR.message_types_by_name['CmpImgReply'] = _CMPIMGREPLY
DESCRIPTOR.message_types_by_name['TxtReply'] = _TXTREPLY
DESCRIPTOR.message_types_by_name['ElementRect'] = _ELEMENTRECT
DESCRIPTOR.message_types_by_name['ElementPos'] = _ELEMENTPOS
DESCRIPTOR.message_types_by_name['HistBarData'] = _HISTBARDATA
DESCRIPTOR.message_types_by_name['DMatch'] = _DMATCH
DESCRIPTOR.message_types_by_name['DMatchPos'] = _DMATCHPOS

IntRequest = _reflection.GeneratedProtocolMessageType('IntRequest', (_message.Message,), dict(
  DESCRIPTOR = _INTREQUEST,
  __module__ = 'imageprocess_pb2'
  # @@protoc_insertion_point(class_scope:imageprocess.IntRequest)
  ))
_sym_db.RegisterMessage(IntRequest)

BoolReply = _reflection.GeneratedProtocolMessageType('BoolReply', (_message.Message,), dict(
  DESCRIPTOR = _BOOLREPLY,
  __module__ = 'imageprocess_pb2'
  # @@protoc_insertion_point(class_scope:imageprocess.BoolReply)
  ))
_sym_db.RegisterMessage(BoolReply)

StringReply = _reflection.GeneratedProtocolMessageType('StringReply', (_message.Message,), dict(
  DESCRIPTOR = _STRINGREPLY,
  __module__ = 'imageprocess_pb2'
  # @@protoc_insertion_point(class_scope:imageprocess.StringReply)
  ))
_sym_db.RegisterMessage(StringReply)

FloatReply = _reflection.GeneratedProtocolMessageType('FloatReply', (_message.Message,), dict(
  DESCRIPTOR = _FLOATREPLY,
  __module__ = 'imageprocess_pb2'
  # @@protoc_insertion_point(class_scope:imageprocess.FloatReply)
  ))
_sym_db.RegisterMessage(FloatReply)

StringReq = _reflection.GeneratedProtocolMessageType('StringReq', (_message.Message,), dict(
  DESCRIPTOR = _STRINGREQ,
  __module__ = 'imageprocess_pb2'
  # @@protoc_insertion_point(class_scope:imageprocess.StringReq)
  ))
_sym_db.RegisterMessage(StringReq)

ImgRequest = _reflection.GeneratedProtocolMessageType('ImgRequest', (_message.Message,), dict(
  DESCRIPTOR = _IMGREQUEST,
  __module__ = 'imageprocess_pb2'
  # @@protoc_insertion_point(class_scope:imageprocess.ImgRequest)
  ))
_sym_db.RegisterMessage(ImgRequest)

FilterRequest = _reflection.GeneratedProtocolMessageType('FilterRequest', (_message.Message,), dict(
  DESCRIPTOR = _FILTERREQUEST,
  __module__ = 'imageprocess_pb2'
  # @@protoc_insertion_point(class_scope:imageprocess.FilterRequest)
  ))
_sym_db.RegisterMessage(FilterRequest)

Blur = _reflection.GeneratedProtocolMessageType('Blur', (_message.Message,), dict(
  DESCRIPTOR = _BLUR,
  __module__ = 'imageprocess_pb2'
  # @@protoc_insertion_point(class_scope:imageprocess.Blur)
  ))
_sym_db.RegisterMessage(Blur)

FilterP = _reflection.GeneratedProtocolMessageType('FilterP', (_message.Message,), dict(
  DESCRIPTOR = _FILTERP,
  __module__ = 'imageprocess_pb2'
  # @@protoc_insertion_point(class_scope:imageprocess.FilterP)
  ))
_sym_db.RegisterMessage(FilterP)

DetectImg = _reflection.GeneratedProtocolMessageType('DetectImg', (_message.Message,), dict(
  DESCRIPTOR = _DETECTIMG,
  __module__ = 'imageprocess_pb2'
  # @@protoc_insertion_point(class_scope:imageprocess.DetectImg)
  ))
_sym_db.RegisterMessage(DetectImg)

ImgReply = _reflection.GeneratedProtocolMessageType('ImgReply', (_message.Message,), dict(
  DESCRIPTOR = _IMGREPLY,
  __module__ = 'imageprocess_pb2'
  # @@protoc_insertion_point(class_scope:imageprocess.ImgReply)
  ))
_sym_db.RegisterMessage(ImgReply)

OcrRequest = _reflection.GeneratedProtocolMessageType('OcrRequest', (_message.Message,), dict(
  DESCRIPTOR = _OCRREQUEST,
  __module__ = 'imageprocess_pb2'
  # @@protoc_insertion_point(class_scope:imageprocess.OcrRequest)
  ))
_sym_db.RegisterMessage(OcrRequest)

FindImgRequest = _reflection.GeneratedProtocolMessageType('FindImgRequest', (_message.Message,), dict(
  DESCRIPTOR = _FINDIMGREQUEST,
  __module__ = 'imageprocess_pb2'
  # @@protoc_insertion_point(class_scope:imageprocess.FindImgRequest)
  ))
_sym_db.RegisterMessage(FindImgRequest)

CmpImgRequest = _reflection.GeneratedProtocolMessageType('CmpImgRequest', (_message.Message,), dict(
  DESCRIPTOR = _CMPIMGREQUEST,
  __module__ = 'imageprocess_pb2'
  # @@protoc_insertion_point(class_scope:imageprocess.CmpImgRequest)
  ))
_sym_db.RegisterMessage(CmpImgRequest)

CmpImgReply = _reflection.GeneratedProtocolMessageType('CmpImgReply', (_message.Message,), dict(
  DESCRIPTOR = _CMPIMGREPLY,
  __module__ = 'imageprocess_pb2'
  # @@protoc_insertion_point(class_scope:imageprocess.CmpImgReply)
  ))
_sym_db.RegisterMessage(CmpImgReply)

TxtReply = _reflection.GeneratedProtocolMessageType('TxtReply', (_message.Message,), dict(
  DESCRIPTOR = _TXTREPLY,
  __module__ = 'imageprocess_pb2'
  # @@protoc_insertion_point(class_scope:imageprocess.TxtReply)
  ))
_sym_db.RegisterMessage(TxtReply)

ElementRect = _reflection.GeneratedProtocolMessageType('ElementRect', (_message.Message,), dict(
  DESCRIPTOR = _ELEMENTRECT,
  __module__ = 'imageprocess_pb2'
  # @@protoc_insertion_point(class_scope:imageprocess.ElementRect)
  ))
_sym_db.RegisterMessage(ElementRect)

ElementPos = _reflection.GeneratedProtocolMessageType('ElementPos', (_message.Message,), dict(
  DESCRIPTOR = _ELEMENTPOS,
  __module__ = 'imageprocess_pb2'
  # @@protoc_insertion_point(class_scope:imageprocess.ElementPos)
  ))
_sym_db.RegisterMessage(ElementPos)

HistBarData = _reflection.GeneratedProtocolMessageType('HistBarData', (_message.Message,), dict(
  DESCRIPTOR = _HISTBARDATA,
  __module__ = 'imageprocess_pb2'
  # @@protoc_insertion_point(class_scope:imageprocess.HistBarData)
  ))
_sym_db.RegisterMessage(HistBarData)

DMatch = _reflection.GeneratedProtocolMessageType('DMatch', (_message.Message,), dict(
  DESCRIPTOR = _DMATCH,
  __module__ = 'imageprocess_pb2'
  # @@protoc_insertion_point(class_scope:imageprocess.DMatch)
  ))
_sym_db.RegisterMessage(DMatch)

DMatchPos = _reflection.GeneratedProtocolMessageType('DMatchPos', (_message.Message,), dict(
  DESCRIPTOR = _DMATCHPOS,
  __module__ = 'imageprocess_pb2'
  # @@protoc_insertion_point(class_scope:imageprocess.DMatchPos)
  ))
_sym_db.RegisterMessage(DMatchPos)


DESCRIPTOR.has_options = True
DESCRIPTOR._options = _descriptor._ParseOptions(descriptor_pb2.FileOptions(), _b('\n\033io.grpc.examples.helloworldB\017HelloWorldProtoP\001\242\002\003HLW'))
import grpc
from grpc.beta import implementations as beta_implementations
from grpc.beta import interfaces as beta_interfaces
from grpc.framework.common import cardinality
from grpc.framework.interfaces.face import utilities as face_utilities


class ImageStub(object):
  """The greeting service definition.
  """

  def __init__(self, channel):
    """Constructor.

    Args:
      channel: A grpc.Channel.
    """
    self.Info = channel.unary_unary(
        '/imageprocess.Image/Info',
        request_serializer=StringReq.SerializeToString,
        response_deserializer=StringReply.FromString,
        )
    self.Draw = channel.unary_unary(
        '/imageprocess.Image/Draw',
        request_serializer=ImgRequest.SerializeToString,
        response_deserializer=ImgReply.FromString,
        )
    self.DetectElements = channel.unary_stream(
        '/imageprocess.Image/DetectElements',
        request_serializer=DetectImg.SerializeToString,
        response_deserializer=ElementRect.FromString,
        )
    self.DetectSimilarity = channel.unary_stream(
        '/imageprocess.Image/DetectSimilarity',
        request_serializer=CmpImgRequest.SerializeToString,
        response_deserializer=DMatchPos.FromString,
        )
    self.DrawSimilarity = channel.unary_unary(
        '/imageprocess.Image/DrawSimilarity',
        request_serializer=CmpImgRequest.SerializeToString,
        response_deserializer=CmpImgReply.FromString,
        )
    self.OCR = channel.unary_unary(
        '/imageprocess.Image/OCR',
        request_serializer=ImgRequest.SerializeToString,
        response_deserializer=TxtReply.FromString,
        )
    self.FindImage = channel.unary_unary(
        '/imageprocess.Image/FindImage',
        request_serializer=FindImgRequest.SerializeToString,
        response_deserializer=ElementPos.FromString,
        )
    self.GetBrightnessHistArray = channel.unary_stream(
        '/imageprocess.Image/GetBrightnessHistArray',
        request_serializer=ImgRequest.SerializeToString,
        response_deserializer=HistBarData.FromString,
        )
    self.GetDiffRect = channel.unary_unary(
        '/imageprocess.Image/GetDiffRect',
        request_serializer=CmpImgRequest.SerializeToString,
        response_deserializer=ElementRect.FromString,
        )
    self.CompareColorHist = channel.unary_unary(
        '/imageprocess.Image/CompareColorHist',
        request_serializer=CmpImgRequest.SerializeToString,
        response_deserializer=FloatReply.FromString,
        )
    self.Filter2D = channel.unary_unary(
        '/imageprocess.Image/Filter2D',
        request_serializer=FilterRequest.SerializeToString,
        response_deserializer=ImgReply.FromString,
        )


class ImageServicer(object):
  """The greeting service definition.
  """

  def Info(self, request, context):
    """Sends a greeting
    """
    context.set_code(grpc.StatusCode.UNIMPLEMENTED)
    context.set_details('Method not implemented!')
    raise NotImplementedError('Method not implemented!')

  def Draw(self, request, context):
    context.set_code(grpc.StatusCode.UNIMPLEMENTED)
    context.set_details('Method not implemented!')
    raise NotImplementedError('Method not implemented!')

  def DetectElements(self, request, context):
    context.set_code(grpc.StatusCode.UNIMPLEMENTED)
    context.set_details('Method not implemented!')
    raise NotImplementedError('Method not implemented!')

  def DetectSimilarity(self, request, context):
    context.set_code(grpc.StatusCode.UNIMPLEMENTED)
    context.set_details('Method not implemented!')
    raise NotImplementedError('Method not implemented!')

  def DrawSimilarity(self, request, context):
    context.set_code(grpc.StatusCode.UNIMPLEMENTED)
    context.set_details('Method not implemented!')
    raise NotImplementedError('Method not implemented!')

  def OCR(self, request, context):
    context.set_code(grpc.StatusCode.UNIMPLEMENTED)
    context.set_details('Method not implemented!')
    raise NotImplementedError('Method not implemented!')

  def FindImage(self, request, context):
    context.set_code(grpc.StatusCode.UNIMPLEMENTED)
    context.set_details('Method not implemented!')
    raise NotImplementedError('Method not implemented!')

  def GetBrightnessHistArray(self, request, context):
    context.set_code(grpc.StatusCode.UNIMPLEMENTED)
    context.set_details('Method not implemented!')
    raise NotImplementedError('Method not implemented!')

  def GetDiffRect(self, request, context):
    context.set_code(grpc.StatusCode.UNIMPLEMENTED)
    context.set_details('Method not implemented!')
    raise NotImplementedError('Method not implemented!')

  def CompareColorHist(self, request, context):
    context.set_code(grpc.StatusCode.UNIMPLEMENTED)
    context.set_details('Method not implemented!')
    raise NotImplementedError('Method not implemented!')

  def Filter2D(self, request, context):
    context.set_code(grpc.StatusCode.UNIMPLEMENTED)
    context.set_details('Method not implemented!')
    raise NotImplementedError('Method not implemented!')


def add_ImageServicer_to_server(servicer, server):
  rpc_method_handlers = {
      'Info': grpc.unary_unary_rpc_method_handler(
          servicer.Info,
          request_deserializer=StringReq.FromString,
          response_serializer=StringReply.SerializeToString,
      ),
      'Draw': grpc.unary_unary_rpc_method_handler(
          servicer.Draw,
          request_deserializer=ImgRequest.FromString,
          response_serializer=ImgReply.SerializeToString,
      ),
      'DetectElements': grpc.unary_stream_rpc_method_handler(
          servicer.DetectElements,
          request_deserializer=DetectImg.FromString,
          response_serializer=ElementRect.SerializeToString,
      ),
      'DetectSimilarity': grpc.unary_stream_rpc_method_handler(
          servicer.DetectSimilarity,
          request_deserializer=CmpImgRequest.FromString,
          response_serializer=DMatchPos.SerializeToString,
      ),
      'DrawSimilarity': grpc.unary_unary_rpc_method_handler(
          servicer.DrawSimilarity,
          request_deserializer=CmpImgRequest.FromString,
          response_serializer=CmpImgReply.SerializeToString,
      ),
      'OCR': grpc.unary_unary_rpc_method_handler(
          servicer.OCR,
          request_deserializer=ImgRequest.FromString,
          response_serializer=TxtReply.SerializeToString,
      ),
      'FindImage': grpc.unary_unary_rpc_method_handler(
          servicer.FindImage,
          request_deserializer=FindImgRequest.FromString,
          response_serializer=ElementPos.SerializeToString,
      ),
      'GetBrightnessHistArray': grpc.unary_stream_rpc_method_handler(
          servicer.GetBrightnessHistArray,
          request_deserializer=ImgRequest.FromString,
          response_serializer=HistBarData.SerializeToString,
      ),
      'GetDiffRect': grpc.unary_unary_rpc_method_handler(
          servicer.GetDiffRect,
          request_deserializer=CmpImgRequest.FromString,
          response_serializer=ElementRect.SerializeToString,
      ),
      'CompareColorHist': grpc.unary_unary_rpc_method_handler(
          servicer.CompareColorHist,
          request_deserializer=CmpImgRequest.FromString,
          response_serializer=FloatReply.SerializeToString,
      ),
      'Filter2D': grpc.unary_unary_rpc_method_handler(
          servicer.Filter2D,
          request_deserializer=FilterRequest.FromString,
          response_serializer=ImgReply.SerializeToString,
      ),
  }
  generic_handler = grpc.method_handlers_generic_handler(
      'imageprocess.Image', rpc_method_handlers)
  server.add_generic_rpc_handlers((generic_handler,))


class BetaImageServicer(object):
  """The Beta API is deprecated for 0.15.0 and later.

  It is recommended to use the GA API (classes and functions in this
  file not marked beta) for all further purposes. This class was generated
  only to ease transition from grpcio<0.15.0 to grpcio>=0.15.0."""
  """The greeting service definition.
  """
  def Info(self, request, context):
    """Sends a greeting
    """
    context.code(beta_interfaces.StatusCode.UNIMPLEMENTED)
  def Draw(self, request, context):
    context.code(beta_interfaces.StatusCode.UNIMPLEMENTED)
  def DetectElements(self, request, context):
    context.code(beta_interfaces.StatusCode.UNIMPLEMENTED)
  def DetectSimilarity(self, request, context):
    context.code(beta_interfaces.StatusCode.UNIMPLEMENTED)
  def DrawSimilarity(self, request, context):
    context.code(beta_interfaces.StatusCode.UNIMPLEMENTED)
  def OCR(self, request, context):
    context.code(beta_interfaces.StatusCode.UNIMPLEMENTED)
  def FindImage(self, request, context):
    context.code(beta_interfaces.StatusCode.UNIMPLEMENTED)
  def GetBrightnessHistArray(self, request, context):
    context.code(beta_interfaces.StatusCode.UNIMPLEMENTED)
  def GetDiffRect(self, request, context):
    context.code(beta_interfaces.StatusCode.UNIMPLEMENTED)
  def CompareColorHist(self, request, context):
    context.code(beta_interfaces.StatusCode.UNIMPLEMENTED)
  def Filter2D(self, request, context):
    context.code(beta_interfaces.StatusCode.UNIMPLEMENTED)


class BetaImageStub(object):
  """The Beta API is deprecated for 0.15.0 and later.

  It is recommended to use the GA API (classes and functions in this
  file not marked beta) for all further purposes. This class was generated
  only to ease transition from grpcio<0.15.0 to grpcio>=0.15.0."""
  """The greeting service definition.
  """
  def Info(self, request, timeout, metadata=None, with_call=False, protocol_options=None):
    """Sends a greeting
    """
    raise NotImplementedError()
  Info.future = None
  def Draw(self, request, timeout, metadata=None, with_call=False, protocol_options=None):
    raise NotImplementedError()
  Draw.future = None
  def DetectElements(self, request, timeout, metadata=None, with_call=False, protocol_options=None):
    raise NotImplementedError()
  def DetectSimilarity(self, request, timeout, metadata=None, with_call=False, protocol_options=None):
    raise NotImplementedError()
  def DrawSimilarity(self, request, timeout, metadata=None, with_call=False, protocol_options=None):
    raise NotImplementedError()
  DrawSimilarity.future = None
  def OCR(self, request, timeout, metadata=None, with_call=False, protocol_options=None):
    raise NotImplementedError()
  OCR.future = None
  def FindImage(self, request, timeout, metadata=None, with_call=False, protocol_options=None):
    raise NotImplementedError()
  FindImage.future = None
  def GetBrightnessHistArray(self, request, timeout, metadata=None, with_call=False, protocol_options=None):
    raise NotImplementedError()
  def GetDiffRect(self, request, timeout, metadata=None, with_call=False, protocol_options=None):
    raise NotImplementedError()
  GetDiffRect.future = None
  def CompareColorHist(self, request, timeout, metadata=None, with_call=False, protocol_options=None):
    raise NotImplementedError()
  CompareColorHist.future = None
  def Filter2D(self, request, timeout, metadata=None, with_call=False, protocol_options=None):
    raise NotImplementedError()
  Filter2D.future = None


def beta_create_Image_server(servicer, pool=None, pool_size=None, default_timeout=None, maximum_timeout=None):
  """The Beta API is deprecated for 0.15.0 and later.

  It is recommended to use the GA API (classes and functions in this
  file not marked beta) for all further purposes. This function was
  generated only to ease transition from grpcio<0.15.0 to grpcio>=0.15.0"""
  request_deserializers = {
    ('imageprocess.Image', 'CompareColorHist'): CmpImgRequest.FromString,
    ('imageprocess.Image', 'DetectElements'): DetectImg.FromString,
    ('imageprocess.Image', 'DetectSimilarity'): CmpImgRequest.FromString,
    ('imageprocess.Image', 'Draw'): ImgRequest.FromString,
    ('imageprocess.Image', 'DrawSimilarity'): CmpImgRequest.FromString,
    ('imageprocess.Image', 'Filter2D'): FilterRequest.FromString,
    ('imageprocess.Image', 'FindImage'): FindImgRequest.FromString,
    ('imageprocess.Image', 'GetBrightnessHistArray'): ImgRequest.FromString,
    ('imageprocess.Image', 'GetDiffRect'): CmpImgRequest.FromString,
    ('imageprocess.Image', 'Info'): StringReq.FromString,
    ('imageprocess.Image', 'OCR'): ImgRequest.FromString,
  }
  response_serializers = {
    ('imageprocess.Image', 'CompareColorHist'): FloatReply.SerializeToString,
    ('imageprocess.Image', 'DetectElements'): ElementRect.SerializeToString,
    ('imageprocess.Image', 'DetectSimilarity'): DMatchPos.SerializeToString,
    ('imageprocess.Image', 'Draw'): ImgReply.SerializeToString,
    ('imageprocess.Image', 'DrawSimilarity'): CmpImgReply.SerializeToString,
    ('imageprocess.Image', 'Filter2D'): ImgReply.SerializeToString,
    ('imageprocess.Image', 'FindImage'): ElementPos.SerializeToString,
    ('imageprocess.Image', 'GetBrightnessHistArray'): HistBarData.SerializeToString,
    ('imageprocess.Image', 'GetDiffRect'): ElementRect.SerializeToString,
    ('imageprocess.Image', 'Info'): StringReply.SerializeToString,
    ('imageprocess.Image', 'OCR'): TxtReply.SerializeToString,
  }
  method_implementations = {
    ('imageprocess.Image', 'CompareColorHist'): face_utilities.unary_unary_inline(servicer.CompareColorHist),
    ('imageprocess.Image', 'DetectElements'): face_utilities.unary_stream_inline(servicer.DetectElements),
    ('imageprocess.Image', 'DetectSimilarity'): face_utilities.unary_stream_inline(servicer.DetectSimilarity),
    ('imageprocess.Image', 'Draw'): face_utilities.unary_unary_inline(servicer.Draw),
    ('imageprocess.Image', 'DrawSimilarity'): face_utilities.unary_unary_inline(servicer.DrawSimilarity),
    ('imageprocess.Image', 'Filter2D'): face_utilities.unary_unary_inline(servicer.Filter2D),
    ('imageprocess.Image', 'FindImage'): face_utilities.unary_unary_inline(servicer.FindImage),
    ('imageprocess.Image', 'GetBrightnessHistArray'): face_utilities.unary_stream_inline(servicer.GetBrightnessHistArray),
    ('imageprocess.Image', 'GetDiffRect'): face_utilities.unary_unary_inline(servicer.GetDiffRect),
    ('imageprocess.Image', 'Info'): face_utilities.unary_unary_inline(servicer.Info),
    ('imageprocess.Image', 'OCR'): face_utilities.unary_unary_inline(servicer.OCR),
  }
  server_options = beta_implementations.server_options(request_deserializers=request_deserializers, response_serializers=response_serializers, thread_pool=pool, thread_pool_size=pool_size, default_timeout=default_timeout, maximum_timeout=maximum_timeout)
  return beta_implementations.server(method_implementations, options=server_options)


def beta_create_Image_stub(channel, host=None, metadata_transformer=None, pool=None, pool_size=None):
  """The Beta API is deprecated for 0.15.0 and later.

  It is recommended to use the GA API (classes and functions in this
  file not marked beta) for all further purposes. This function was
  generated only to ease transition from grpcio<0.15.0 to grpcio>=0.15.0"""
  request_serializers = {
    ('imageprocess.Image', 'CompareColorHist'): CmpImgRequest.SerializeToString,
    ('imageprocess.Image', 'DetectElements'): DetectImg.SerializeToString,
    ('imageprocess.Image', 'DetectSimilarity'): CmpImgRequest.SerializeToString,
    ('imageprocess.Image', 'Draw'): ImgRequest.SerializeToString,
    ('imageprocess.Image', 'DrawSimilarity'): CmpImgRequest.SerializeToString,
    ('imageprocess.Image', 'Filter2D'): FilterRequest.SerializeToString,
    ('imageprocess.Image', 'FindImage'): FindImgRequest.SerializeToString,
    ('imageprocess.Image', 'GetBrightnessHistArray'): ImgRequest.SerializeToString,
    ('imageprocess.Image', 'GetDiffRect'): CmpImgRequest.SerializeToString,
    ('imageprocess.Image', 'Info'): StringReq.SerializeToString,
    ('imageprocess.Image', 'OCR'): ImgRequest.SerializeToString,
  }
  response_deserializers = {
    ('imageprocess.Image', 'CompareColorHist'): FloatReply.FromString,
    ('imageprocess.Image', 'DetectElements'): ElementRect.FromString,
    ('imageprocess.Image', 'DetectSimilarity'): DMatchPos.FromString,
    ('imageprocess.Image', 'Draw'): ImgReply.FromString,
    ('imageprocess.Image', 'DrawSimilarity'): CmpImgReply.FromString,
    ('imageprocess.Image', 'Filter2D'): ImgReply.FromString,
    ('imageprocess.Image', 'FindImage'): ElementPos.FromString,
    ('imageprocess.Image', 'GetBrightnessHistArray'): HistBarData.FromString,
    ('imageprocess.Image', 'GetDiffRect'): ElementRect.FromString,
    ('imageprocess.Image', 'Info'): StringReply.FromString,
    ('imageprocess.Image', 'OCR'): TxtReply.FromString,
  }
  cardinalities = {
    'CompareColorHist': cardinality.Cardinality.UNARY_UNARY,
    'DetectElements': cardinality.Cardinality.UNARY_STREAM,
    'DetectSimilarity': cardinality.Cardinality.UNARY_STREAM,
    'Draw': cardinality.Cardinality.UNARY_UNARY,
    'DrawSimilarity': cardinality.Cardinality.UNARY_UNARY,
    'Filter2D': cardinality.Cardinality.UNARY_UNARY,
    'FindImage': cardinality.Cardinality.UNARY_UNARY,
    'GetBrightnessHistArray': cardinality.Cardinality.UNARY_STREAM,
    'GetDiffRect': cardinality.Cardinality.UNARY_UNARY,
    'Info': cardinality.Cardinality.UNARY_UNARY,
    'OCR': cardinality.Cardinality.UNARY_UNARY,
  }
  stub_options = beta_implementations.stub_options(host=host, metadata_transformer=metadata_transformer, request_serializers=request_serializers, response_deserializers=response_deserializers, thread_pool=pool, thread_pool_size=pool_size)
  return beta_implementations.dynamic_stub(channel, 'imageprocess.Image', cardinalities, options=stub_options)
# @@protoc_insertion_point(module_scope)
